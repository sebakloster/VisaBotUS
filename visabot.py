# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.support.select import Select
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
import telegram_send
from apscheduler.schedulers.blocking import BlockingScheduler
from datetime import datetime as dt

class TestVisaVerification():
  def setup_method(self, method):
    options = Options()
    self.driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), chrome_options=options)
    self.vars = {}

  def teardown_method(self, method):
    self.driver.quit()

  def test_visaVerification(self):
        # 1 | open | /es-ar/niv/users/sign_in |
        print('open site')
        self.driver.get("https://ais.usvisa-info.com/es-ar/niv/users/sign_in")
        # 2 | type | id=user_email | reemplazar 'email' con el email real
        self.driver.find_element(By.ID, "user_email").send_keys("email")
        # 3 | type | id=user_password | reemplazar 'password' con el password real
        self.driver.find_element(By.ID, "user_password").send_keys("password")
        # 4 | click | css=.icheckbox |
        self.driver.find_element(By.CSS_SELECTOR, ".icheckbox").click()
        # 5 | click | name=commit |
        self.driver.find_element(By.NAME, "commit").click()
        # 6 | open | https://ais.usvisa-info.com/es-ar/niv/schedule/[YourScehduleId]/appointment | 
        # You should use your scehdule id url. 
        self.driver.get("https://ais.usvisa-info.com/es-ar/niv/schedule/40610275/appointment")
        time.sleep(1)
        # 7 | click | id=appointments_asc_appointment_facility_id |
        self.driver.find_element(By.ID, "appointments_consulate_appointment_facility_id").click()
        # 8 | click | id=appointments_asc_appointment_date |
        time.sleep(2)
        self.driver.find_element(By.ID, "appointments_consulate_appointment_date").click()

        element = None
        while element == None:
            element = 'found'
            try:
                # 9 | click | css=.ui-icon-circle-triangle-e |
                self.driver.find_element(By.CSS_SELECTOR, ".ui-icon-circle-triangle-e").click()
                # 10 | click | xpath=//td[@data-handler='selectDay']/a |
                self.driver.find_element(By.XPATH, "//td[@data-handler=\'selectDay\']/a").click()
            except:
                element = None

        # Telegram chatbot        
        date = self.driver.find_element(By.ID, "appointments_consulate_appointment_date").get_attribute("value")
        print(date)
        foundDate = dt.strptime(date, "%Y-%m-%d")
        travelDate = dt.strptime("2022-08-10", "%Y-%m-%d") # I was interested in dates before 2022-08-10
        if foundDate < travelDate:
          telegram_send.send(messages=[date])

def my_job():
  obj = TestVisaVerification()
  obj.setup_method('get')
  obj.test_visaVerification()

scheduler = BlockingScheduler()
# Web scrapper is going to execute every 20s.
# However I recommend executing it every 5 minutes, otherwise you could get banned for 5 hours. 
scheduler.add_job(my_job, 'interval', minutes=0.2) 
scheduler.start()

# https://medium.com/@robertbracco1/how-to-write-a-telegram-bot-to-send-messages-with-python-bcdf45d0a580
